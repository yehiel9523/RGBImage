#BlueJ class context
comment0.target=RGBImage
comment0.text=\r\n\ this\ class\ is\ a\ structure\ to\ make\ an\ image\ from\ arrays\ of\ pixels\ and\ some\r\n\ mathodes\ on\ that\ .\r\n\r\n\ @author\ Yehiel\ Toporowitch\r\n\ @version\ 27/05/2021\r\n
comment1.params=rows\ cols
comment1.target=RGBImage(int,\ int)
comment1.text=\r\n\ this\ constructor\ make\ a\ black\ image\ with\ the\ rows\ and\ columns\ from\ the\ params\r\n\ \r\n\ @params\ rows\ num\ of\ the\ rows\r\n\ @params\ cols\ num\ of\ the\ columns\r\n
comment10.params=
comment10.target=void\ flipVertical()
comment10.text=\r\n\ flip\ the\ image\ in\ vartical\ direction\r\n
comment11.params=
comment11.target=void\ invertColors()
comment11.text=\r\n\ invert\ the\ all\ coolors\ of\ the\ image\r\n
comment12.params=
comment12.target=void\ rotateClockwise()
comment12.text=\r\n\ rotate\ the\ image\ to\ th\ clockwise\ direction\r\n
comment13.params=
comment13.target=void\ rotateCounterClockwise()
comment13.text=\r\n\ rotate\ the\ image\ to\ the\ CounterClockwise\ direction\r\n
comment14.params=offset
comment14.target=void\ shiftCol(int)
comment14.text=\r\n\ shift\ the\ image\ height\ by\ the\ recieved\ num\ if\ the\ num\ biger\ of\ the\ image\r\n\ coloumns\ it's\ not\ do\ anything\r\n\ \r\n\ @params\ offset\ the\ num\ to\ shift\ from\r\n
comment15.params=offset
comment15.target=void\ shiftRow(int)
comment15.text=\r\n\ smae\ like\ the\ shiftCol\ mathode\ but\ in\ the\ width\ of\ the\ image\r\n\ \r\n\ @params\ offset\ the\ num\ to\ shift\ from\r\n
comment16.params=
comment16.target=double[][]\ toGrayscaleArray()
comment16.text=\r\n\ returens\ a\ tow\ dimensional\ array\ of\ double\ of\ the\ gary\ scale\ of\ the\ pixels\ of\r\n\ the\ image\r\n\ \r\n\ @return\ tow\ dimensional\ array\ of\ double\ of\ the\ gary\ scale\ of\ the\ pixels\ of\r\n\ \ \ \ \ \ \ \ \ the\ image\r\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\r\n\ returens\ a\ string\ of\ the\ all\ pixels\ in\ the\ image\r\n\ \r\n\ @returen\ string\ of\ the\ pixels\r\n
comment18.params=
comment18.target=RGBColor[][]\ toRGBColorArray()
comment18.text=\r\n\ returens\ a\ copy\ of\ the\ image\r\n\ \r\n\ @return\ RGBColor[][]\ that\ is\ copy\ of\ the\ image\r\n
comment2.params=pixels
comment2.target=RGBImage(RGBColor[][])
comment2.text=\r\n\ this\ constructor\ recieved\ an\ RGBVColor\ tow\ dimensional\ array\ and\ make\ a\r\n\ RGBImage\ with\ an\ image\ from\ taht;\r\n\ \r\n\ @params\ pixels\ a\ RGBVColor\ tow\ dimansional\ array\r\n
comment3.params=other
comment3.target=RGBImage(RGBImage)
comment3.text=\r\n\ a\ copy\ constructor\r\n\ \r\n\ @params\ other\ the\ other\ RGBImage\ that\ we\ copy\ from\r\n
comment4.params=
comment4.target=int\ getHeight()
comment4.text=\r\n\ returens\ the\ num\ of\ columns\ of\ the\ image\r\n\ \r\n\ @return\ num\ of\ columns;\r\n
comment5.params=
comment5.target=int\ getWidth()
comment5.text=\r\n\ returns\ the\ num\ of\ rows\ of\ the\ image\r\n\ \r\n\ @return\ num\ of\ rows\r\n
comment6.params=row\ col
comment6.target=RGBColor\ getPixel(int,\ int)
comment6.text=\r\n\ get\ the\ pixel\ in\ spacipic\ place\ by\ the\ index\ of\ row\ and\ column\r\n\ \r\n\ @params\ row\ index\ of\ row\r\n\ @params\ col\ index\ of\ column\r\n\ @return\ a\ RGBColor\ of\ the\ pixel\r\n
comment7.params=row\ col\ pixel
comment7.target=void\ setPixel(int,\ int,\ RGBColor)
comment7.text=\r\n\ set\ the\ pixel\ in\ the\ recieved\ index\r\n\ \r\n\ @params\ row\ the\ index\ of\ row\r\n\ @params\ col\ the\ index\ of\ column\r\n
comment8.params=other
comment8.target=boolean\ equals(RGBImage)
comment8.text=\r\n\ returens\ if\ the\ given\ RGBImage\ equals\ to\ this\ RGBImage\r\n\ \r\n\ @params\ other\ the\ other\ RGBImage\r\n\ @return\ if\ they\ are\ equals\r\n
comment9.params=
comment9.target=void\ flipHorizontal()
comment9.text=\r\n\ flip\ the\ image\ in\ Horizontal\ direction\r\n
numComments=19
